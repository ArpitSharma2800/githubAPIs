

const queries = [1, 4, 9, 16];
queries.map(x=>{
  let n = true;
	while (n == true) {
      console.log(x, "API CALL TO SERVER");
      n = false;
    }
  console.log(x,"API HIT OF SUCCESS")
});


ios stars:>=3 pushed:2016-01-01..2020-12-31


{
  rateLimit {
    limit
    cost
    remaining
    used
    resetAt
    nodeCount
  }
  search(first: 10, query: "android pushed:2018-01-01..2019-12-31 stars:>=3", type: REPOSITORY) {
    pageInfo {
      endCursor
      hasNextPage
    }
    repositoryCount
    userCount
    wikiCount
    edges {
      cursor
      node {
        ... on Repository {
          name
          nameWithOwner
          id
          createdAt
          databaseId
          description
          diskUsage
          environments(first: 5) {
            totalCount
            edges {
              node {
                id
              }
            }
          }
          forkCount
          hasIssuesEnabled
          hasProjectsEnabled
          hasWikiEnabled
          isArchived
          isBlankIssuesEnabled
          isDisabled
          isEmpty
          isFork
          isInOrganization
          isLocked
          isMirror
          isPrivate
          isSecurityPolicyEnabled
          isTemplate
          isUserConfigurationRepository
          issues {
            totalCount
          }
          labels {
            totalCount
          }
          languages(first: 100) {
            edges {
              node {
                name
              }
              size
            }
            totalCount
          }
          lockReason
          mergeCommitAllowed
          mirrorUrl
          primaryLanguage {
            name
          }
          projects {
            totalCount
          }
          rebaseMergeAllowed
          repositoryTopics(first: 100) {
            edges {
              node {
                topic {
                  name
                  stargazerCount
                }
              }
            }
            totalCount
          }
          stargazerCount
          submodules {
            totalCount
          }
          tempCloneToken
          url
          usesCustomOpenGraphImage
          viewerCanAdminister
          viewerCanCreateProjects
          viewerCanSubscribe
          viewerCanUpdateTopics
          viewerDefaultCommitEmail
          viewerDefaultMergeMethod
          viewerHasStarred
          viewerPermission
          viewerPossibleCommitEmails
          viewerSubscription
          watchers {
            totalCount
          }
          assignableUsers {
            totalCount
          }
          pullRequests {
            totalCount
          }
          releases {
            totalCount
          }
          packages {
            totalCount
          }
          updatedAt
        }
      }
      textMatches {
        fragment
        property
      }
    }
  }
}
